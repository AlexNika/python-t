# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-04-11 13:13
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
        ('shop', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='фамилия')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='имя')),
                ('patronymic', models.CharField(blank=True, max_length=30, verbose_name='отчество')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='дата рождения')),
                ('phone', models.DecimalField(decimal_places=0, error_messages={'min_value': 'Номер телефона указывается без восьмёрки, должен содержать 10 цифр и не должен начинаться с 0', 'unique': 'Пользователь с таким номера телефона уже существует'}, max_digits=10, unique=True, validators=[django.core.validators.MaxValueValidator(9999999999), django.core.validators.MinValueValidator(1000000000)], verbose_name='номер телефона (без восьмёрки)')),
                ('allow_call', models.BooleanField(default=True, verbose_name='принимать звонки')),
                ('allow_sms', models.BooleanField(default=True, verbose_name='получать SMS-сообщения')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='электронная почта')),
                ('allow_email', models.BooleanField(default=True, verbose_name='получать электронные письма')),
                ('is_staff', models.BooleanField(default=False, help_text='Отметьте, если пользователь может входить в административную часть сайта.', verbose_name='статус персонала')),
                ('is_active', models.BooleanField(default=True, help_text='Отметьте, если пользователь должен считаться активным. Уберите эту отметку вместо удаления учётной записи.', verbose_name='активный')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата регистрации')),
                ('buyer_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.BuyerType', verbose_name='тип покупателя')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='ведущий клиента менеджер по продажам')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
            managers=[
                ('objects', users.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=128, verbose_name='адрес')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'адрес доставки',
                'verbose_name_plural': 'адреса доставки',
            },
        ),
    ]
